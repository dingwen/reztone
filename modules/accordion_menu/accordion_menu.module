<?php
// $Id: accordion_menu.module,v 1.2 2009/07/05 23:32:46 suryanto Exp $ 

/**
 * Accordion menu output
 */
function accordion_menu_output($tree, &$active_menu = 0) {
  $output = "<div id='accordion'>";
  $items = array();

  // Pull out just the menu items we are going to render so that we
  // get an accurate count for the first/last classes.
  foreach ($tree as $data) {
    if (!$data['link']['hidden']) {
      $items[] = $data;
    }
  }

  $num_items = count($items);
  $i = 0;
  foreach ($items as $i => $data) {
    //print_r($data);
    $output .= "<h3><a href='".url($data['link']['href'])."'>".$data['link']['link_title']."</a></h3>";
    $output .= "<div>";
    if ($data['link']['in_active_trail'] == '1') {
			$active_menu = $i;
		}
    $i++;
    $extra_class = NULL;
    if ($i == 0) {
      $extra_class = 'first';
    }
    if ($i == $num_items - 1) {
      $extra_class = 'last';
    }
    $link = theme('menu_item_link', $data['link']);
    $subtree = _accordion_menu_subtree($data['link']);
    if ($subtree) {
      $output .= menu_tree_output($subtree);
    }
    $output .= "</div>";
  }
  $output .= "</div>";
  
  return $output;
}


/**
 * Traverses the menu tree and returns the sub-tree of the item
 * indicated by the parameter.
 *
 * @param $item
 *   An menu item whose children should be found.
 *
 * @return
 *   The items below the passed menu item.
 */
function _accordion_menu_subtree($item) {
  static $index = array();
  static $indexed = array();

  // This looks expensive, but menu_tree_all_data uses static caching.
  $tree = menu_tree_all_data($item['menu_name']);

  // Index the tree to find the path to this item.
  if (!isset($indexed[$item['menu_name']])) {
    $index += _accordion_menu_index($tree);
    $indexed[$item['menu_name']] = TRUE;
  }
  // Traverse the tree.
  foreach ($index[$item['mlid']]['parents'] as $mlid) {
    $key = $index[$mlid]['key'];
    if (!isset($tree[$key])) {
      return array();
    }
    $tree = $tree[$key]['below'];
  }
  $key = $index[$item['mlid']]['key'];
  return isset($tree[$key]) ? $tree[$key]['below'] : array();
}


/**
 * Indexes the menu tree by mlid. This is needed to identify the items
 * without relying on titles. This function is recursive.
 *
 * @param $tree
 *   A tree of menu items such as the return value of menu_tree_all_data()
 *
 * @return
 *   An array associating mlid values with the internal keys of the menu tree.
 */
function _accordion_menu_index($tree, $ancestors = array(), $parent = NULL) {
  $index = array();
  if ($parent) $ancestors[] = $parent;
  foreach ($tree as $key => $item) {
    $index[$item['link']['mlid']] = array(
      'key' => $key,
      'parents' => $ancestors,
    );
    if (!empty($item['below'])) {
      $index += _accordion_menu_index($item['below'], $ancestors, $item['link']['mlid']);
    }
  }
  return $index;
}


/**
 * Implementation of hook_perm
 */
function accordion_menu_perm() {
  return array('administer accordion menu');
}

/**
 * Implementation of hook_menu().
 */
function accordion_menu_menu() {
  $items['admin/settings/accordion_menu'] = array(
		'title' => 'Accordion Menu',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('accordion_menu_admin_settings', 2),
		'access arguments' => array('administer accordion menu'),
		'type' => MENU_NORMAL_ITEM,
	);
  return $items;
}

/**
 * Implementation of hook_settings().
 */
function accordion_menu_admin_settings() {
  $menus = menu_get_names();
  $options = array();
  foreach ($menus as $menu) {
    $options[$menu] = $menu;
  }
  $form['accordion_menu_select'] = array(
    '#type' => 'select', 
    '#title' => t("Select menu"), 
    '#options' => $options, 
    '#default_value' => variable_get('accordion_menu_select', $navigation),
    '#description' => t("Select menu to show in accordion format."),
  );
  return system_settings_form($form);
}

/**
 * Implementation of hook_block().
 */
function accordion_menu_block($op = 'list', $delta = 0) {
  if ($op == 'list') 
  {
    $blocks[0]['info'] = 'Accordion Menu';
		return $blocks;
  }
	
  if ($op == 'view') 
  {
		$menu_id = variable_get('accordion_menu_select', 'navigation');
		$tree = menu_tree_page_data($menu_id);
		$active_menu = 0;
		$content = accordion_menu_output($tree, $active_menu);
		
		$js = "\$(function() {\n";
		$js .= "\$(\"#accordion\").accordion({ header: 'h3', cookie: { path: '/' }, active: ".$active_menu.", event: 'mouseover', autoHeight: false
 });\n";
		$js .= "});\n";
	
		jquery_ui_add('ui.accordion');
		drupal_add_js($js, 'inline');
		
		$block['subject'] = '<none>';
		$block['content'] = $content;
		return $block;
	}
}